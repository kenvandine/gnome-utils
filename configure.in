AC_INIT(gtt)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gnome-utils, 1.0.50)

AM_MAINTAINER_MODE

AM_ACLOCAL_INCLUDE(macros)

GNOME_INIT(applets)

AC_ISC_POSIX
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_STDC_HEADERS
AC_ARG_PROGRAM
dnl AM_PROG_LIBTOOL
AM_PROG_LEX
AC_PROG_YACC
dnl AC_DECL_YYTEXT
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
GNOME_COMPILE_WARNINGS

GNOME_X_CHECKS

dnl PROGRAMS_GNCAL="gncal"
dnl AC_SUBST(PROGRAMS_GNCAL)

GNOME_CHECK_OBJC
if test $OBJECTIVE_C = yes; then
  GNOME_INIT_OBJC
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_ST_RDEV
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_UID_T

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MMAP
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(getcwd gettimeofday getwd putenv strdup strtoul uname)

GNOME_CHECK_GUILE

ALL_LINGUAS="ca cs da de el en_GB es et fi fr ga hu it ja ko no pl pt pt_BR ru sv uk wa zh_TW.Big5 zh_CN.GB2312"
AM_GNOME_GETTEXT

dnl gsu
AC_CHECK_LIB(pam, pam_authenticate, [
	AC_DEFINE(USE_PAM)
	AC_CHECK_LIB(pam_misc, pam_misc_setenv,
	[PAM_LIBS="-ldl -lpam -lpam_misc"], [PAM_LIBS="-ldl -lpam"],
	-ldl -lpam)
], [PAM_LIBS=], -ldl)
AC_SUBST(PAM_LIBS)

AC_CHECK_FUNCS(endgrent endpwent)

dnl idetool
mu_idetool=
AC_CHECK_HEADERS(linux/hdreg.h,[mu_idetool=idetool])
AM_CONDITIONAL(MU_IDETOOL,test "$mu_idetool" = idetool)

dnl Needed on SysV for shadow passwords.
AC_CHECK_LIB(sec, main)

dnl Needed on Linux for shadow passwords.
AC_CHECK_LIB(shadow, main)

AC_EGREP_HEADER(sp_pwdp, shadow.h,
		AC_CHECK_FUNC(getspnam, AC_DEFINE(HAVE_SHADOW_H)))

AC_CHECK_FUNCS(crypt)
if test $ac_cv_func_crypt = no; then
  # SCO-ODT-3.0 is reported to need this library for crypt.
  AC_CHECK_LIB(ufc, crypt, LIBS="$LIBS -lufc",
    [# NetBSD needs this library for crypt.
    AC_CHECK_LIB(crypt, crypt)])
fi

dnl gsu end.

dnl Some nice conditional
AM_CONDITIONAL(FALSE, test x = y)

dnl Check for libgtop
GNOME_INIT_LIBGTOP

dnl gdialog

AC_CHECK_CURSES

dnl gdialog end

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

dnl guname
AC_ARG_ENABLE(guname-capplet,
[  --disable-guname-capplet  Use guname-capplet to build guname with control center applet support[default=yes]], enable_guname_capplet="$enableval", enable_guname_capplet=yes)

AM_CONDITIONAL(GUNAME_CAPPLET, test x$enable_guname_capplet = xno)
dnl guname end

dnl If logf() is available, gstripchart will use it in preference 
dnl to the presumably slower log() function.
AC_CHECK_FUNCS(logf)

dnl If the Gnome applet libraries are available, define HAVE_GNOME_APPLET.
dnl This will allow both an applet and an application version of          
dnl gstripchart to be built.
AM_CONDITIONAL(HAVE_GNOME_APPLET, test "x$GNOME_APPLETS_LIBS" != "x")

if test "x$GNOME_APPLETS_LIBS" != "x"; then
  AC_ARG_ENABLE(gstripchart-applet,
  [  --enable-gstripchart-applet  Build a gstripchart applet [default=yes]],
  enable_gstripchart_applet="$enableval", enable_gstripchart_applet=yes)
fi
AM_CONDITIONAL(BUILD_GSTRIPCHART_APPLET, test $enable_gstripchart_applet = yes)

AC_OUTPUT([
Makefile
gnome-utils.spec
po/Makefile.in
intl/Makefile
macros/Makefile
idl/Makefile
cromagnon/Makefile
gcalc/Makefile
gdiskfree/Makefile
ghex/Makefile
ghex/help/Makefile
ghex/help/C/Makefile
ghex/help/es/Makefile
ghex/help/sv/Makefile
gnome-find/Makefile
gsearchtool/Makefile
gstripchart/Makefile
gstripchart/help/Makefile
gstripchart/help/C/Makefile
gtt/Makefile
gtt/help/Makefile
gtt/help/C/Makefile
gtt/help/es/Makefile
gtt/help/de/Makefile
gdialog/Makefile
splash/Makefile
mini-utils/Makefile
mini-utils/gless/Makefile
mini-utils/gnome-run/Makefile
mini-utils/grun/Makefile
mini-utils/gshutdown/Makefile
mini-utils/gshutdown/help/Makefile
mini-utils/gshutdown/help/C/Makefile
mini-utils/gshutdown/help/es/Makefile
mini-utils/gshutdown/help/no/Makefile
mini-utils/guname/Makefile
mini-utils/gw/Makefile
mini-utils/idetool/Makefile
mini-utils/gfontsel/Makefile
mini-utils/gcolorsel/Makefile])

#mini-utils/gsu/Makefile
#mini-utils/gpenguin/Makefile
