dnl 
dnl configure.in for gnome-utils, process with autoconf >= 2.13
dnl

AC_INIT(gcalc)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gnome-utils, 1.102.0)

AM_MAINTAINER_MODE

dnl
dnl Due to the sed scripts being split on 90 line
dnl blocks, this macro needs to be right at the beggining.
dnl

AC_PROG_INTLTOOL

dnl We could probably remove this cruft
dnl 
dnl # find the actual value for $prefix that we'll end up with
dnl REAL_PREFIX=
dnl if test "x$prefix" = "xNONE"; then
dnl   REAL_PREFIX=$ac_default_prefix
dnl else
dnl   REAL_PREFIX=$prefix
dnl fi
dnl old_prefix=$prefix
dnl prefix=$REAL_PREFIX
dnl
dnl REAL_EXEC_PREFIX=
dnl if test "x$exec_prefix" = "xNONE"; then
dnl   REAL_EXEC_PREFIX=$prefix
dnl else
dnl   REAL_EXEC_PREFIX=$exec_prefix
dnl fi
dnl old_exec_prefix=$exec_prefix
dnl exec_prefix=$REAL_EXEC_PREFIX


dnl GNOME_INIT(applets)

dnl Can someone have a look at this list and see if we actually
dnl need *all* of them??
 
AC_ISC_POSIX
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_STDC_HEADERS
AC_PROG_YACC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl AC_CANONICAL_SYSTEM
dnl AC_ARG_PROGRAM
dnl AM_PROG_LIBTOOL
dnl AM_PROG_LEX
dnl AC_DECL_YYTEXT
dnl GNOME_X_CHECKS

GNOME_COMPILE_WARNINGS

AC_PATH_XTRA

dnl *****************************************
dnl pkg-config check time
dnl *****************************************

LIBGNOME_REQUIRED=1.107.0
LIBGNOMEUI_REQUIRED=1.107.0
LIBGLADE_REQUIRED=1.99.2
LIBBONOBOUI_REQUIRED=1.103.0
LIBXML_REQUIRED=2.2.8
GCONF_REQUIRED=1.1.2
GTKHTML_REQUIRED=1.99.0
GNOMEVFS_REQUIRED=1.9.3
GNOMEVFSMODULE_REQUIRED=1.9.3
LIBGTOP_REQUIRED=1.90.0
LIBPANEL_APPLET_REQUIRED=1.5.8

dnl *****************************************
dnl libgnome, libgnomeui needed for all utils
dnl *****************************************

PKG_CHECK_MODULES(GNOME_UTILS, libgnome-2.0 >= $LIBGNOME_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED)
AC_SUBST(GNOME_UTILS_CFLAGS)
AC_SUBST(GNOME_UTILS_LIBS)

dnl *****************************
dnl popt is needed for most utils
dnl *****************************

AC_CHECK_LIB(popt, poptHelpOptions,, AC_MSG_ERROR([popt is required to build gnome-utils. You can download the latest version from ftp://people.redhat.com/sopwith/popt/]))

dnl *********************************************
dnl gnome-vfs/mime-data is need for gsearchtool
dnl *********************************************

PKG_CHECK_MODULES(GNOMEVFS, gnome-vfs-2.0 >= $GNOMEVFS_REQUIRED gnome-vfs-module-2.0 >= $GNOMEVFS_REQUIRED)
AC_SUBST(GNOMEVFS_CFLAGS)
AC_SUBST(GNOMEVFS_LIBS)

dnl *********************************************
dnl libglade is needed for gcolorsel
dnl *********************************************

PKG_CHECK_MODULES(LIBGLADE, libglade-2.0 >= $LIBGLADE_REQUIRED)
AC_SUBST(LIBGLADE_CFLAGS)
AC_SUBST(LIBGLADE_LIBS)

dnl *********************************************
dnl libbonobui is needed for FIXME
dnl *********************************************

PKG_CHECK_MODULES(LIBBONOBOUI, libbonoboui-2.0 >= $LIBBONOBOUI_REQUIRED)
AC_SUBST(LIBBONOBOUI_CFLAGS)
AC_SUBST(LIBBONOBOUI_LIBS)

dnl *********************************************
dnl for anything which calls gconftool-2 correctly
dnl *********************************************

AM_GCONF_SOURCE_2

dnl Putting the code check below so we don't forget it's there

dnl If the Gnome applet libraries are available, define HAVE_GNOME_APPLET.
dnl This will allow both an applet and an application version of          
dnl gcolorsel to be built.

AM_CONDITIONAL(HAVE_GNOME_APPLET, test "x$GNOME_APPLETS_LIBS" != "x")

if test "x$GNOME_APPLETS_LIBS" != "x"; then
  AC_ARG_ENABLE(gcolorsel-applet,
  [  --enable-gcolorsel-applet  Build a gcolorsel applet [default=yes]],
  enable_gcolorsel_applet="$enableval", enable_gcolorsel_applet=yes) 
fi

AM_CONDITIONAL(BUILD_GCOLORSEL_APPLET, test "$enable_gcolorsel_applet" = yes)

dnl *******************************
dnl gnome-print checks FIXME
dnl *******************************
dnl if test "x$enable_gnome_print" = "xyes"; then
dnl   AM_PATH_GNOME_PRINT(0.12.0)
dnl   AC_DEFINE(HAVE_GNOME_PRINT)
dnl fi

dnl *******************************
dnl Applet checks
dnl *******************************

PKG_CHECK_MODULES(APPLET, libpanelapplet-2.0 >= $LIBPANEL_APPLET_REQUIRED)
AC_SUBST(APPLET_LIBS)
AC_SUBST(APPLET_CFLAGS)

dnl ***************************************************************
dnl Other miscellaneous checks 
dnl ***************************************************************

dnl ***************
dnl Console helper
dnl **************

AC_ARG_ENABLE(console-helper,
  [  --enable-console-helper=[no/yes]  Enable PAM console helper [default =no]],,
  enable_console_helper=no)

dnl **************
dnl  Test whether jw is installed
dnl **************

AC_PATH_PROG(JW,jw,no)
if test x$JW = xno; then
  HAVE_JW="no"
else
  HAVE_JW="yes"
fi
AM_CONDITIONAL(HAVE_JW, test "x$HAVE_JW" = "xyes")
AC_SUBST(HAVE_JW)

dnl ***********
dnl PAM prefix
dnl ***********

withval=""
AC_ARG_WITH(pam-prefix,
[      --with-pam-prefix=<prefix>   specify where pam files go],[
if test x$withval != x; then
   AC_MSG_RESULT("PAM files will be installed in prefix ${withval}.")
fi])
if test x$withval != x; then
	PAM_PREFIX_UNEXPANDED="$withval"
	PAM_PREFIX=`eval echo $PAM_PREFIX_UNEXPANDED`
else
	PAM_PREFIX="\$(sysconfdir)"
fi
AC_SUBST(PAM_PREFIX)
    
AC_PATH_PROG(CONSOLE_HELPER,consolehelper,no)
if test "x$CONSOLE_HELPER" = "xno" -a "x$enable_console_helper" = "xyes" ; then
	AC_MSG_ERROR(Console helper requested but consolehelper binary not found)
fi

dnl ***********************************************************************
dnl so that people on places like solaris can set where the rgb.txt file is
dnl ***********************************************************************

XLIBDIR=$x_libraries
if test x$XLIBDIR = xNONE ; then
	XLIBDIR="/usr/X11R6/lib/"
fi
AC_SUBST(XLIBDIR)

dnl **************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl **************************************************************
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_ST_RDEV
AC_HEADER_TIME
AC_STRUCT_TM
AC_TYPE_UID_T

dnl *****************************
dnl Checks for library functions.
dnl *****************************

AC_FUNC_ALLOCA
AC_FUNC_MMAP
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(getcwd gettimeofday getwd putenv strdup strtoul uname logf)

dnl ********************************************************
dnl nl_langinfo used for printing i18n time string formats
dnl check for nl_langinfo(D_FMT) which is missing on FreeBSD
dnl ********************************************************
dnl FIXME - dunno about this??
dnl LANGINFO_D_FMT_CHECK

dnl *****************************************************************
dnl Allow users to run logview and gshutdown using the console helper 
dnl PAM stuff.
dnl *****************************************************************

if test "x$enable_console_helper" = "xyes"; then
  AM_CONDITIONAL(CONSOLE_HELPER, true)
else
  AM_CONDITIONAL(CONSOLE_HELPER, false)
fi



dnl *************************************************
dnl Individual gnome-utils checks 
dnl *************************************************


dnl ******************** 
dnl gfloppy checks
dnl ********************

build_gfloppy=true
AC_CHECK_HEADER(linux/fd.h, AC_DEFINE(HAVE_LINUX_FD_H),
		build_gfloppy=false
                AC_MSG_WARN([*** gfloppy will not be built.]))
# Check for the ext2fs library
AC_CHECK_LIB(ext2fs, ext2fs_mkdir, x_libs="-lext2fs",
  build_gfloppy=false
  AC_MSG_WARN([
*** libext2fs not found. You need e2fsprogs and e2fsprogs-devel installed to build gfloppy.]))
# check for ext2fs header specific includes
AC_CHECK_HEADER(ext2fs/ext2_io.h, ,
  build_gfloppy=false
  AC_MSG_WARN([
*** ext2fs/ext2_io.h not found.  You need e2fsprogs-devel installed.]))
AM_CONDITIONAL(BUILD_GFLOPPY, test "$build_gfloppy" = true)


dnl ********************
dnl logview checks
dnl ********************

dnl This is where the binary actually resides,
dnl not the console helper link
if test "x$enable_console_helper" = "xyes"; then
	LOGVIEWDIR_TMP="$sbindir"
else
	LOGVIEWDIR_TMP="$bindir"
fi
EXPANDED_LOGVIEWDIR=`eval echo $LOGVIEWDIR_TMP`
AC_SUBST(EXPANDED_LOGVIEWDIR)


dnl ********************
dnl gshutdown checks
dnl ********************

dnl This is where the binary actually resides,
dnl not the console helper link
if test "x$enable_console_helper" = "xyes"; then
	GSHUTDOWNDIR_TMP="$sbindir"
else
	GSHUTDOWNDIR_TMP="$bindir"
fi
EXPANDED_GSHUTDOWNDIR=`eval echo $GSHUTDOWNDIR_TMP`
AC_SUBST(EXPANDED_GSHUTDOWNDIR)


dnl ******************** 
dnl gsu checks
dnl ********************

AC_CHECK_LIB(pam, pam_authenticate, [
	AC_DEFINE(USE_PAM)
	AC_CHECK_LIB(pam_misc, pam_misc_setenv,
	[PAM_LIBS="-ldl -lpam -lpam_misc"], [PAM_LIBS="-ldl -lpam"],
	-ldl -lpam)
], [PAM_LIBS=], -ldl)
AC_SUBST(PAM_LIBS)

AC_CHECK_FUNCS(endgrent endpwent)


dnl ********************
dnl idetool checks
dnl ********************

dnl mu_idetool=
dnl AC_CHECK_HEADERS(linux/hdreg.h,[mu_idetool=idetool])
dnl AM_CONDITIONAL(MU_IDETOOL,test "$mu_idetool" = idetool)

dnl Needed on SysV for shadow passwords.
AC_CHECK_LIB(sec, main)

dnl Needed on Linux for shadow passwords.
AC_CHECK_LIB(shadow, main)

AC_EGREP_HEADER(sp_pwdp, shadow.h,
		AC_CHECK_FUNC(getspnam, AC_DEFINE(HAVE_SHADOW_H)))

AC_CHECK_FUNCS(crypt)
if test $ac_cv_func_crypt = no; then
  # SCO-ODT-3.0 is reported to need this library for crypt.
  AC_CHECK_LIB(ufc, crypt, LIBS="$LIBS -lufc",
    [# NetBSD needs this library for crypt.
    AC_CHECK_LIB(crypt, crypt)])
fi

dnl ******************
dnl gdialog checks
dnl ******************

AC_CHECK_CURSES
AC_SUBST(CURSES_INCLUDEDIR)
AC_SUBST(CURSES_LIBS)

dnl ******************
dnl guname checks
dnl ******************

AC_ARG_ENABLE(guname-capplet,
[  --disable-guname-capplet  Use guname-capplet to build guname with control center applet support[default=yes]], enable_guname_capplet="$enableval", enable_guname_capplet=yes)

AM_CONDITIONAL(GUNAME_CAPPLET, test x$enable_guname_capplet = xno)

dnl ********************
dnl scrollkeeper checks 
dnl ********************

AC_PATH_PROG(SCROLLKEEPER_CONFIG, scrollkeeper-config,no)
if test x$SCROLLKEEPER_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find scrollkeeper-config. Please install the scrollkeeper package)
fi

dnl *******************************
dnl Internationalization
dnl ******************************* 

ALL_LINGUAS="az ca cs da de el en_GB es et fi fr ga gl hu it ja ko lt lv ms nl nn no pl pt pt_BR ro ru sk sl sv ta tr uk wa zh_CN zh_TW"
GETTEXT_PACKAGE=gnome-utils-2.0
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE")
AM_GLIB_GNU_GETTEXT

AC_DEFINE_UNQUOTED(GNOME_ICONDIR, "${prefix}/share/pixmaps")

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT([
Makefile
gnome-utils.spec
po/Makefile.in
idl/Makefile
gcalc/Makefile
gcalc/help/Makefile
gcalc/help/C/Makefile
logview/Makefile
logview/gnome-system-log-security
logview/pixmaps/Makefile
gcharmap/Makefile
gcharmap/src/Makefile
gcharmap/pixmaps/Makefile
gcharmap/help/Makefile
gcharmap/help/C/Makefile
gsearchtool/Makefile
gsearchtool/help/Makefile
gsearchtool/help/C/Makefile
gsearchtool/help/it/Makefile
gsearchtool/help/es/Makefile
gdialog/Makefile
gdialog/help/Makefile
gdialog/help/C/Makefile
gdictsrc/Makefile
gdictsrc/help/Makefile
gdictsrc/help/C/Makefile
gfloppy/Makefile
gfloppy/doc/Makefile
gfloppy/doc/C/Makefile
gfloppy/src/Makefile
meat-grinder/Makefile
meat-grinder/help/Makefile
meat-grinder/help/C/Makefile
exe-handler/Makefile])

#gcalc/help/it/Makefile
#gcalc/help/es/Makefile
#gcalc/help/de/Makefile
#mini-utils/Makefile
#mini-utils/gfontsel/Makefile
#mini-utils/gfontsel/help/Makefile
#mini-utils/gfontsel/help/C/Makefile
#mini-utils/gfontsel/help/es/Makefile
#mini-utils/gcolorsel/Makefile
#mini-utils/gcolorsel/glade/Makefile
#mini-utils/gcolorsel/doc/Makefile
#mini-utils/gcolorsel/doc/C/Makefile
#splash/Makefile
#stripchart/Makefile
#stripchart/doc/Makefile
#stripchart/doc/es/Makefile
#stripchart/doc/C/Makefile
#cromagnon/Makefile
#mini-utils/gsu/Makefile
#mini-utils/gpenguin/Makefile

dnl <= Configuration summary =>

echo ""
echo "gnome-utils configuration summary:"
echo "=================================="
echo ""

dnl <= CFLAGS and LDFLAGS =>
echo "CFLAGS : $CFLAGS"
echo "LDFLAGS : $LDFLAGS"
echo ""

dnl <= Prefixes =>
echo "prefix : $prefix"
echo "sysconf dir : "`eval echo $sysconfdir`
echo "bin dir : "`eval echo $bindir`
echo "sbin dir : "`eval echo $sbindir`
echo "PAM prefix : $PAM_PREFIX"
echo "data dir : "`eval echo $datadir`
echo "X libraries dir : $XLIBDIR"
echo ""

dnl <= Console Helper =>
if test "x$enable_console_helper" = "xyes"; then
	echo "Console helper (logview)          : YES"
else
	echo "Console helper (logview)          : NO"
fi

dnl <= message file =>
echo "Logview default message file      : $messages_file"

dnl <= gfloppy =>
if test "x$build_gfloppy" = "xtrue"; then
	echo "Build gfloppy                     : YES"
else
	echo "Build gfloppy                     : NO"
fi

dnl <= idetool =>
if test "x$mu_idetool" = "xidetool"; then
	echo "Build idetool                     : YES"
else
	echo "Build idetool                     : NO"
fi

dnl <= guname capplet =>
if test "x$enable_guname_capplet" = "xyes"; then
	echo "guname capplet                    : YES"
else
	echo "guname capplet                    : NO"
fi

dnl <= gcolorsel applet =>
if test "x$enable_gcolorsel_applet" = "xyes"; then
	echo "gcolorsel applet                  : YES"
else
	echo "gcolorsel applet                  : NO"
fi

echo ""
dnl <= End of configuration summary =>

